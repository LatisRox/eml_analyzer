name: Python CI

on:
  push:
    branches: [master]
    paths:
      - ".github/workflows/python.yml"
      - "backend/**"
      - "pyproject.toml"
      - "requirements.txt"
      - "tests/**"
      - "uv.lock"
  pull_request:
    branches: [master]
    paths:
      - ".github/workflows/python.yml"
      - "backend/**"
      - "pyproject.toml"
      - "requirements.txt"
      - "tests/**"
      - "uv.lock"

env:
  PYTHON_VERSION: 3.11

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: "pip"
      - run: pip install -r requirements.txt
      - uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: uv-${{ env.PYTHON_VERSION }}-${{ hashFiles('uv.lock') }}
      - run: uv sync --frozen
      - run: uv run ruff check backend/ tests/
  test:
    runs-on: ubuntu-latest
    services:
      spamassassin:
        image: instantlinux/spamassassin:4.0.0-6
        ports:
          - 783:783
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: "pip"
      - run: pip install -r requirements.txt
      - uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: uv-${{ env.PYTHON_VERSION }}-${{ hashFiles('uv.lock') }}
      - run: uv sync --frozen
      - name: Make dummy frontend directory
        run: mkdir -p frontend/dist/
      - name: Wait until SpamAssasin ready
        run: uv run python scripts/ping.py
      - name: Run tests
        run: uv run coverage run -m pytest
      - name: Coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: uv run coveralls
